openapi: '3.0.2'
info:
  title: Microservice Credit - OpenAPI 3.0
  version: '1.0'
  description: |- 
    La presente especificación contiene los endpoints del microservicio Credit
    y esta basado en la especificación OpenAPI 3.0.  
  termsOfService: http://swagger.io/terms/
  contact:
    email: alcibarvasquez@gmail.com
servers:
  - url: http://localhost:8093

tags:
  - name: Credit
    description: credit
  - name: CreditCard
    description: credit type

paths:  
  /credit:
    post:
      tags:
        - Credit
      operationId: addCredit
      description: 'POST'
      requestBody:
        $ref: '#/components/requestBodies/CreditRequest'
      responses:
        '200':
          description: 'response credit post'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditResponse'  
    get:
      tags:
        - Credit
      operationId: getAllCredits
      description: GETALL
      responses:
        '200':
          description: 'response get all credits'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreditResponse'
  /credit/{creditId}:
    put:
      tags:
        - Credit
      operationId: updateCredit
      description: 'PUT'
      parameters:
        - in: path
          name: creditId
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/CreditRequest'
      responses:
        '200':
          description: 'response credit put'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditResponse'
    get:
      tags:
        - Credit
      operationId: getCreditById
      description: GET
      parameters:
        - in: path
          name: creditId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'response get credit by id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditResponse'
    delete:
      tags:
        - Credit
      operationId: deleteCreditById
      description: 'DELETE'
      parameters:
        - in: path
          name: creditId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: delete credit by id          
  /credit-card:
    post:
      tags:
        - CreditCard
      operationId: addCreditCard
      description: 'POST'
      requestBody:
        $ref: '#/components/requestBodies/CreditCardRequest'
      responses:
        '200':
          description: 'response credit card post'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardResponse'                  
    get:
      tags:
        - CreditCard
      operationId: getAllCreditCard
      description: GETALL
      responses:
        '200':
          description: 'response get all credit card'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreditCardResponse'
  /credit-card/{creditCardId}:
    put:
      tags:
        - CreditCard
      operationId: updateCreditCard
      description: 'PUT'
      parameters:
        - in: path
          name: creditCardId
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/CreditCardRequest'
      responses:
        '200':
          description: 'response credit card put'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardResponse'
    get:
      tags:
        - CreditCard
      operationId: getCreditCardById
      description: GET
      parameters:
        - in: path
          name: creditCardId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'response get credit card by id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardResponse'
    delete:
      tags:
        - CreditCard
      operationId: deleteCreditCardById
      description: 'DELETE'
      parameters:
        - in: path
          name: creditCardId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: delete credit card by id
  /credit-card/count:
    get:
      tags:
        - CreditCard
      operationId: countByClientId
      description: GET
      parameters:
        - in: query
          name: clientId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'response get credit card by client id'
          content:
            application/json:
              schema:
                type: integer

components:
  schemas:
    CreditRequest:
      type: object
      description: Credit model
      required:        
        - clientTypeId
      properties:        
        clientTypeId:
          type: string
          example: 1          
        cardNumber:
          type: string
          example: '4521254521452587'  
        amountRequested:
          type: number
          format: double
          example: 20.5
        maxMonthsOfPayment:
          type: integer
          example: 12             
    CreditResponse:
      type: object
      description: Credit model      
      properties:
        creditId:
          type: string
          example: '1'
        clientTypeId:
          type: string
          example: '1'
        cardNumber:
          type: string
          example: '4521254521452587'  
        amountRequested:
          type: number
          format: double
          example: 20.5
        maxMonthsOfPayment:
          type: integer
          example: 12  
        monthlyFee:
          type: number
          format: double
          example: 20.5
        requestedDate:
          type: string
          format: date-time
    CreditCardRequest:
      type: object
      description: Credit type model
      properties:
        productId:
          type: string
          example: '1'
        clientId:
          type: string
          example: '1'
        cardNumber:
          type: string
          example: '4521254521452587' 
        availableAmount:
          type: number
          format: double
          example: 50.7
        creditLimit:
          type: number
          format: double
          example: 2000
        expirationDate:
          type: string
          format: date-time
    CreditCardResponse:
      type: object
      description: Credit type model
      properties:
        creditCardId:
          type: string
          example: '1'
        productId:
          type: string
          example: '1'
        clientId:
          type: string
          example: '1'
        cardNumber:
          type: string
          example: '4521254521452587' 
        availableAmount:
          type: number
          format: double
          example: 50.7
        creditLimit:
          type: number
          format: double
          example: 2000
        expirationDate:
          type: string
          format: date-time
  requestBodies:
    CreditRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreditRequest'
    CreditCardRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreditCardRequest'